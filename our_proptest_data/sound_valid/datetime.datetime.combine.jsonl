{"function_name": "datetime.datetime.combine", "properties": ["1. The output datetime object should have the same year, month, and day as the provided date argument.", "2. The output datetime object should have the same hour, minute, second, and microsecond as the provided time argument.", "4. The output datetime object should raise a TypeError if the date argument is not an instance of a date class.", "5. The output datetime object should raise a TypeError if the time argument is not an instance of a time class."], "pbt": ["@given(st.dates())\ndef test_weekday_output_range_property(date):\n    result = date.weekday()\n    assert 0 <= result <= 6", "@given(date_time_pairs())\ndef test_output_has_same_hour_minute_second_microsecond(date_time):\n    date, time = date_time\n    result = datetime.datetime.combine(date, time)\n    assert result.hour == time.hour\n    assert result.minute == time.minute\n    assert result.second == time.second\n    assert result.microsecond == time.microsecond", "@given(st.one_of(\n    st.integers(min_value=1, max_value=9999),\n    st.floats(min_value=1, max_value=9999),\n    st.text()\n))\ndef test_type_error_for_invalid_date(invalid_date):\n    invalid_time = datetime.time()\n    try:\n        datetime.datetime.combine(invalid_date, invalid_time)\n        assert False, \"Expected TypeError for invalid date\"\n    except TypeError:\n        pass", "@given(st.one_of(\n    st.integers(min_value=0, max_value=23),\n    st.floats(min_value=0, max_value=23),\n    st.text()\n))\ndef test_type_error_for_invalid_time(invalid_time):\n    valid_date = datetime.date.today()\n    try:\n        datetime.datetime.combine(valid_date, invalid_time)\n        assert False, \"Expected TypeError for invalid time\"\n    except TypeError:\n        pass"], "api_doc": "classmethod datetime.combine(date, time, tzinfo=time.tzinfo)\nReturn a new datetime object whose date components are equal to the given date object\u2019s, and whose time components are equal to the given time object\u2019s. If the tzinfo argument is provided, its value is used to set the tzinfo attribute of the result, otherwise the tzinfo attribute of the time argument is used. If the date argument is a datetime object, its time components and tzinfo attributes are ignored.\n\nFor any datetime object d, d == datetime.combine(d.date(), d.time(), d.tzinfo).\n\nChanged in version 3.6: Added the tzinfo argument."}
