{"function_name": "decimal.Decimal.exp", "properties": ["1. The exponential of NaN should always return NaN.", "2. The exponential of negative infinity should return zero.", "3. The exponential of zero should return one.", "4. The exponential of positive infinity should return positive infinity."], "pbt": ["@given(st.floats(allow_nan=True, allow_infinity=True))\ndef test_decimal_Decimal_exp_nan_property(x):\n    d = Decimal(x)\n    if d.is_nan():\n        assert d.exp() != d.exp()  # exp(NaN) should return NaN", "@given(st.floats(allow_infinity=True, min_value=float('-inf')))\ndef test_decimal_Decimal_exp_negative_infinity_property(x):\n    d = Decimal(x)\n    if d.is_infinite() and d < 0:\n        assert d.exp() == Decimal(0)  # exp(-Infinity) should return 0", "@given(st.floats())\ndef test_decimal_Decimal_exp_zero_property(x):\n    d = Decimal(x)\n    if d == 0:\n        assert d.exp() == Decimal(1)  # exp(0) should return 1", "@given(st.floats(allow_infinity=True, min_value=float('inf')))\ndef test_decimal_Decimal_exp_infinity_property(x):\n    d = Decimal(x)\n    if d.is_infinite() and d > 0:\n        assert d.exp() == d  # exp(Infinity) should return Infinity"], "api_doc": "exp(context=None)\nReturn the value of the (natural) exponential function e**x at the given number. The result is correctly rounded using the ROUND_HALF_EVEN rounding mode.\n\n>>>\nDecimal(1).exp()\nDecimal('2.718281828459045235360287471')\nDecimal(321).exp()\nDecimal('2.561702493119680037517373933E+139')"}
