{"function_name": "decimal.Decimal.adjusted", "properties": ["1. The output of the `adjusted` function should be an integer value representing the adjusted exponent of the decimal number.", "3. If the decimal number is NaN or Infinity, the output should always be 0, regardless of the values of `self._exp` and `self._int`."], "pbt": ["@given(st.decimals(allow_nan=False, allow_infinity=False, max_value=Decimal('1e1000')))\ndef test_decimal_Decimal_adjusted_output_is_integer(decimal_value):\n    result = decimal_value.adjusted()\n    assert isinstance(result, int)", "@given(st.decimals(allow_nan=True, allow_infinity=True))\ndef test_decimal_Decimal_adjusted_nan_infinity_output(decimal_value):\n    if decimal_value.is_nan() or decimal_value.is_infinite():\n        assert decimal_value.adjusted() == 0"], "api_doc": "adjusted()\nReturn the adjusted exponent after shifting out the coefficient\u2019s rightmost digits until only the lead digit remains: Decimal('321e+5').adjusted() returns seven. Used for determining the position of the most significant digit with respect to the decimal point."}
