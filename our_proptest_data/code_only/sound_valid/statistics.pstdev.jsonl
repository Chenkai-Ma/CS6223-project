{"function_name": "statistics.pstdev", "properties": ["1. The output of `pstdev` should always be non-negative, as standard deviation cannot be negative.", "2. If the input data set is empty, `pstdev` should raise a `StatisticsError`, indicating that at least one data point is required.", "3. If the input data contains only one data point, the output of `pstdev` should be zero, since there is no variation in a single value.", "4. The output of `pstdev` should be consistent with the output of `pstdev` when the input data is the same, regardless of the order of the data points."], "pbt": ["@given(st.lists(st.floats(allow_nan=False, allow_infinity=False), min_size=1))\ndef test_statistics_pstdev_non_negative_property(data):\n    result = pstdev(data)\n    assert result >= 0", "@given(st.lists(st.floats(allow_nan=False, allow_infinity=False), min_size=0))\ndef test_statistics_pstdev_empty_input_property(data):\n    if len(data) == 0:\n        try:\n            pstdev(data)\n            assert False, \"Expected StatisticsError for empty input\"\n        except StatisticsError:\n            pass", "@given(st.lists(st.floats(allow_nan=False, allow_infinity=False), min_size=1))\ndef test_statistics_pstdev_single_value_property(data):\n    result = pstdev([data[0]])\n    assert result == 0", "@given(st.lists(st.floats(allow_nan=False, allow_infinity=False), min_size=1))\ndef test_statistics_pstdev_order_invariance_property(data):\n    result1 = pstdev(data)\n    result2 = pstdev(data[::-1])\n    assert result1 == result2"], "api_doc": "statistics.pstdev(data, mu=None)\nReturn the population standard deviation (the square root of the population variance). See pvariance() for arguments and other details.\n\n>>>\npstdev([1.5, 2.5, 2.5, 2.75, 3.25, 4.75])\n0.986893273527251"}
