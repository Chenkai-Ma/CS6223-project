{"function_name": "statistics.geometric_mean", "properties": ["1. The geometric mean of a dataset containing only positive numbers should always be greater than zero.", "3. If the dataset is empty, the function should raise a `StatisticsError` indicating that a non-empty dataset is required.", "4. The geometric mean should return `NaN` if the dataset contains any `NaN` values.", "5. The geometric mean of a dataset containing negative numbers should raise a `StatisticsError`, indicating that negative inputs are not allowed."], "pbt": ["@given(st.lists(st.floats(min_value=0, allow_nan=False, exclude_min=True), min_size=1))\ndef test_geometric_mean_positive_numbers_property(data):\n    result = geometric_mean(data)\n    assert result > 0", "@given(st.lists(st.floats(allow_nan=False), min_size=0))\ndef test_geometric_mean_empty_dataset_property(data):\n    if not data:\n        try:\n            geometric_mean(data)\n            assert False, \"Expected StatisticsError for empty dataset\"\n        except StatisticsError:\n            pass", "@given(st.lists(st.floats(allow_nan=True), min_size=1))\ndef test_geometric_mean_nan_in_data_property(data):\n    if any(math.isnan(x) for x in data):\n        result = geometric_mean(data)\n        assert math.isnan(result)", "@given(st.lists(st.floats(min_value=-1e10, max_value=-1e-1), min_size=1))\ndef test_geometric_mean_negative_numbers_property(data):\n    try:\n        geometric_mean(data)\n        assert False, \"Expected StatisticsError for negative inputs\"\n    except StatisticsError:\n        pass"], "api_doc": "statistics.geometric_mean(data)\nConvert data to floats and compute the geometric mean.\n\nThe geometric mean indicates the central tendency or typical value of the data using the product of the values (as opposed to the arithmetic mean which uses their sum).\n\nRaises a StatisticsError if the input dataset is empty, if it contains a zero, or if it contains a negative value. The data may be a sequence or iterable.\n\nNo special efforts are made to achieve exact results. (However, this may change in the future.)\n\n>>>\nround(geometric_mean([54, 24, 36]), 1)\n36.0\nAdded in version 3.8."}
