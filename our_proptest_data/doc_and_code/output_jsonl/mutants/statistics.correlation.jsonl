{"function_name": "statistics.correlation", "mutants": ["```python\n# property to violate: If both input lists are constant (i.e., all elements are the same), the function should raise a StatisticsError indicating that at least one of the inputs is constant.\nfrom hypothesis import given, strategies as st\nimport statistics\n\n@given(st.lists(st.floats(), min_size=2).filter(lambda lst: len(set(lst)) == 1,\n               st.lists(st.floats(), min_size=2)))\ndef test_violation_of_statistics_correlation_1(x, y):\n    # Modify the output to return a valid correlation value instead of raising an error\n    result = statistics.correlation(x, y)\n    assert result == 1.0, \"Expected a valid correlation value but got an error.\"\n\n@given(st.lists(st.floats(), min_size=2).filter(lambda lst: len(set(lst)) == 1,\n               st.lists(st.floats(), min_size=2)))\ndef test_violation_of_statistics_correlation_2(x, y):\n    # Modify the output to return a fixed invalid correlation value instead of raising an error\n    result = statistics.correlation(x, y)\n    assert result == 0.5, \"Expected a valid correlation value but got an error.\"\n\n@given(st.lists(st.floats(), min_size=2).filter(lambda lst: len(set(lst)) == 1,\n               st.lists(st.floats(), min_size=2)))\ndef test_violation_of_statistics_correlation_3(x, y):\n    # Modify the output to return a correlation value greater than 1 instead of raising an error\n    result = statistics.correlation(x, y)\n    assert result == 1.5, \"Expected a valid correlation value but got an error.\"\n\n@given(st.lists(st.floats(), min_size=2).filter(lambda lst: len(set(lst)) == 1,\n               st.lists(st.floats(), min_size=2)))\ndef test_violation_of_statistics_correlation_4(x, y):\n    # Modify the output to return a correlation value less than -1 instead of raising an error\n    result = statistics.correlation(x, y)\n    assert result == -1.5, \"Expected a valid correlation value but got an error.\"\n\n@given(st.lists(st.floats(), min_size=2).filter(lambda lst: len(set(lst)) == 1,\n               st.lists(st.floats(), min_size=2)))\ndef test_violation_of_statistics_correlation_5(x, y):\n    # Modify the output to return NaN instead of raising an error\n    result = statistics.correlation(x, y)\n    assert result != result, \"Expected a valid correlation value but got an error.\"\n```"], "property": "If both input lists are constant (i.e., all elements are the same), the function should raise a StatisticsError indicating that at least one of the inputs is constant.", "pbt": "@given(st.lists(st.floats(), min_size=2).filter(lambda lst: len(set(lst)) == 1),\n               st.lists(st.floats(), min_size=2))\ndef test_correlation_constant_input_property(x, y):\n    try:\n        statistics.correlation(x, y)\n        assert False, \"Expected StatisticsError but function executed successfully.\"\n    except StatisticsError:\n        pass", "properties": ["2. If both input lists are constant (i.e., all elements are the same), the function should raise a StatisticsError indicating that at least one of the inputs is constant."]}
