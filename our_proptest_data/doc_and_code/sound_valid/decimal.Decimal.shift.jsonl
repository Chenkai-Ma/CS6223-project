{"function_name": "decimal.Decimal.shift", "properties": ["3. Shifting by zero should return the original operand, confirming that no changes occur when the shift amount is zero.", "5. The output's coefficient should not exceed the defined precision in the context, ensuring that the result adheres to the maximum allowable digits as specified by the context's precision."], "pbt": ["@given(st.decimals(allow_nan=False, allow_infinity=False))\ndef test_shifting_by_zero_returns_original_operand_property(d):\n    result = d.shift(0)\n    assert result == d", "@given(st.decimals(), st.integers(min_value=-getcontext().prec, max_value=getcontext().prec))\ndef test_shift_precision_property(value, shift_amount):\n    result = value.shift(shift_amount)\n    assert len(str(result)) <= getcontext().prec"], "api_doc": "shift(other, context=None)\nReturn the result of shifting the digits of the first operand by an amount specified by the second operand. The second operand must be an integer in the range -precision through precision. The absolute value of the second operand gives the number of places to shift. If the second operand is positive then the shift is to the left; otherwise the shift is to the right. Digits shifted into the coefficient are zeros. The sign and exponent of the first operand are unchanged."}
