{"function_name": "decimal.Decimal.shift", "properties": ["4. The number of significant digits in the output should not exceed the precision defined in the context, meaning it should always be truncated or padded to fit within the allowed precision."], "pbt": ["@given(st.decimals(), st.integers(min_value=-100, max_value=100))\ndef test_significant_digits_limit_property(d, shift):\n    result = d.shift(shift)\n    assert len(result.to_eng_string().replace('.', '').lstrip('0')) <= getcontext().prec"], "api_doc": "shift(other, context=None)\nReturn the result of shifting the digits of the first operand by an amount specified by the second operand. The second operand must be an integer in the range -precision through precision. The absolute value of the second operand gives the number of places to shift. If the second operand is positive then the shift is to the left; otherwise the shift is to the right. Digits shifted into the coefficient are zeros. The sign and exponent of the first operand are unchanged."}
