{"function_name": "statistics.correlation", "properties": ["3. If one of the input lists is constant (e.g., all elements are the same), the function should raise a StatisticsError."], "pbt": ["@given(st.lists(st.floats(), min_size=2))\ndef test_constant_list_property(x):\n    if len(set(x)) == 1:  # All elements are the same\n        try:\n            correlation(x, [1.0] * len(x))\n            assert False  # Should not reach here\n        except StatisticsError:\n            assert True  # Expected behavior"], "api_doc": "statistics.correlation(x, y, /, *, method='linear')\nReturn the Pearson\u2019s correlation coefficient for two inputs. Pearson\u2019s correlation coefficient r takes values between -1 and +1. It measures the strength and direction of a linear relationship.\n\nIf method is \u201cranked\u201d, computes Spearman\u2019s rank correlation coefficient for two inputs. The data is replaced by ranks. Ties are averaged so that equal values receive the same rank. The resulting coefficient measures the strength of a monotonic relationship.\n\nSpearman\u2019s correlation coefficient is appropriate for ordinal data or for continuous data that doesn\u2019t meet the linear proportion requirement for Pearson\u2019s correlation coefficient.\n\nBoth inputs must be of the same length (no less than two), and need not to be constant, otherwise StatisticsError is raised.\n\nExample with Kepler\u2019s laws of planetary motion:\n\n>>>\n# Mercury, Venus, Earth, Mars, Jupiter, Saturn, Uranus, and  Neptune\norbital_period = [88, 225, 365, 687, 4331, 10_756, 30_687, 60_190]    # days\ndist_from_sun = [58, 108, 150, 228, 778, 1_400, 2_900, 4_500] # million km\n\n# Show that a perfect monotonic relationship exists\ncorrelation(orbital_period, dist_from_sun, method='ranked')\n1.0\n\n# Observe that a linear relationship is imperfect\nround(correlation(orbital_period, dist_from_sun), 4)\n0.9882\n\n# Demonstrate Kepler's third law: There is a linear correlation\n# between the square of the orbital period and the cube of the\n# distance from the sun.\nperiod_squared = [p * p for p in orbital_period]\ndist_cubed = [d * d * d for d in dist_from_sun]\nround(correlation(period_squared, dist_cubed), 4)\n1.0\nAdded in version 3.10.\n\nChanged in version 3.12: Added support for Spearman\u2019s rank correlation coefficient."}
