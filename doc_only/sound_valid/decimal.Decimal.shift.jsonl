{"function_name": "decimal.Decimal.shift", "properties": ["1. Shifting a positive integer to the left by a non-negative integer results in a number that is greater than or equal to the original number, assuming no overflow occurs.", "2. Shifting a positive integer to the right by a positive integer results in a number that is less than or equal to the original number, assuming the shift does not exceed the number of digits in the integer.", "3. Shifting a negative integer to the left by a non-negative integer results in a number that is less than or equal to the original number, assuming no overflow occurs.", "4. Shifting a negative integer to the right by a positive integer results in a number that is greater than or equal to the original number, assuming the shift does not exceed the number of digits in the integer."], "pbt": ["@given(st.integers(min_value=1, max_value=10**10), st.integers(min_value=0, max_value=10))\ndef test_positive_integer_shift_left_property(x, shift_amount):\n    result = Decimal(x).shift(shift_amount)\n    assert result >= Decimal(x)", "@given(st.integers(min_value=1, max_value=10**10), st.integers(min_value=1, max_value=10))\ndef test_positive_integer_shift_right_property(x, shift_amount):\n    result = Decimal(x).shift(-shift_amount)\n    assert result <= Decimal(x)", "@given(st.integers(min_value=-10**10, max_value=-1), st.integers(min_value=0, max_value=10))\ndef test_negative_integer_shift_left_property(x, shift_amount):\n    result = Decimal(x).shift(shift_amount)\n    assert result <= Decimal(x)", "@given(st.integers(min_value=-10**10, max_value=-1), st.integers(min_value=1, max_value=10))\ndef test_negative_integer_shift_right_property(x, shift_amount):\n    result = Decimal(x).shift(-shift_amount)\n    assert result >= Decimal(x)"], "api_doc": "shift(other, context=None)\nReturn the result of shifting the digits of the first operand by an amount specified by the second operand. The second operand must be an integer in the range -precision through precision. The absolute value of the second operand gives the number of places to shift. If the second operand is positive then the shift is to the left; otherwise the shift is to the right. Digits shifted into the coefficient are zeros. The sign and exponent of the first operand are unchanged."}
